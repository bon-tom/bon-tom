<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="editRecord" />
  <Caption value="editRecord" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <Panel>
          <Name value="panel2" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Children>
            <Panel>
              <Name value="panel3" />
              <Orientation value="Vertical" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Children>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText1" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.id" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.id.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.id.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText2" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.name" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.name.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.name.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText3" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.yearOfRelease" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.yearOfRelease.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.yearOfRelease.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText4" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.type" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.type.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.type.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText5" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.mainDirector" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.mainDirector.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.mainDirector.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
                <LabeledText identity="labeledText.a92a691d6915448ebf9f0b804ce6a733">
                  <Name value="labeledText6" />
                  <Panel.Height value="#" />
                  <Panel.Width value="*" />
                  <Bindings>
                    <Binding SourceProperty="Data" Expression="complex1.description" />
                    <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.description.isRequired()" />
                    <Binding SourceProperty="Caption" Expression="complex1.description.caption()" />
                  </Bindings>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-labeledtext" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </LabeledText>
              </Children>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-panel" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Panel>
            <TextBox>
              <Name value="textBox1" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.id" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.id.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.id.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox2" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.name" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.name.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.name.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox3" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.yearOfRelease" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.yearOfRelease.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.yearOfRelease.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox4" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.type" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.type.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.type.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox5" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.mainDirector" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.mainDirector.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.mainDirector.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <TextBox>
              <Name value="textBox6" />
              <Panel.Height value="#" />
              <Panel.Width value="*" />
              <Bindings>
                <Binding SourceProperty="Data" Expression="complex1.description" />
                <Binding SourceProperty="IsRequiredMarkVisible" Expression="complex1.description.isRequired()" />
                <Binding SourceProperty="Caption" Expression="complex1.description.caption()" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-textbox" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </TextBox>
            <Button>
              <Name value="goWithoutSaving" />
              <Caption value="Go without saving" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~goBackWithoutSaving" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
            <Button>
              <Name value="SaveEditRecordToServer" />
              <Caption value="Save edit record to server" />
              <Panel.Height value="#" />
              <Panel.Width value="150px" />
              <OnClick>
                <ActionEvent ReferencedAction="~SaveToServer" />
              </OnClick>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-button" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Button>
          </Children>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Attribute>
          <Name value="id" />
          <Caption value="Id" />
          <DataContextParameter.IsInput value="True" />
          <DataContextParameter.IsInputRequired value="True" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="ContentType" />
          <Caption value="Content type" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Attribute>
          <Name value="postResult" />
          <Caption value="Post result" />
          <DeclaredType>
            <AttributeType />
          </DeclaredType>
        </Attribute>
        <Complex>
          <Name value="complex1" />
          <Caption value="Complex 1" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
          </Children>
        </Complex>
        <Collection>
          <Name value="collection1" />
          <Caption value="Collection 1" />
          <Children>
            <Include>
              <Include reference="+DataEntities.Movies" />
            </Include>
          </Children>
        </Collection>
      </Children>
    </DataContext>
  </DataContext>
  <OnActivate>
    <ActionEvent ReferencedAction="~loadSingleRecord" />
  </OnActivate>
  <Actions>
    <ActionBlock>
      <Name value="loadSingleRecord" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var response = apiobjects.serverForMovies.getAsync("record?id=" +tostring(this.form.id))

if response.isError() then
	system.consoleError(response.getErrorMessage())	
else
//	result = response.extractJson("card")
//	result = response.extractJson("record/")
	
	system.console(response.getJsonString())
	
	var codeListData = response.getJsonString()
	
	system.console(codeListData)
	
	//form.apiobjects.fillFromJson(codeListData)
	form.complex1.fromJson(codeListData)
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="goBackWithoutSaving" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[navigation.main.movies1.go("")]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="SaveToServer" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[var item = form.collection1.addItem()

//item.id = form.complex1.id
item.name = form.complex1.name
item.yearOfRelease = form.complex1.yearOfRelease

item.type = form.complex1.type
item.mainDirector = form.complex1.mainDirector
item.description = form.complex1.description


// //////////////////////////////////////////////////
//var messageJson = form.complex1.toJson()
//var messageJson = item.toJson()
//var messageJson = form.complex1.toJson()

// url bude http://localhost:8080/
//var response = form.apiobjects.serverForMovies.postAsync("post", messageJson)

//var response = apiobjects.serverForMovies.postAsync("post", messageJson)

//var response = apiobjects.serverForMovies.postAsync("create", messageJson)
//var response = apiobjects.serverForMovies.postAsync("update", messageJson)

apiobjects.serverForMovies.postAsync("update", form.complex1.toJson())

/*
if (response.isError()) then
	system.consoleError(response.getErrorMessage())
else 
	form.postResult = response.getJsonString()
	form.ContentType = response.getHeader("Content-Type")
	//navigace na hlavní formulář
	system.response
    navigation.main.movies1.go("")
endif*/

//apiobjects.serverForMovies.postAsync("update", form.complex1.toJson())
	

// SuccessFull POSTING?


//navigace na hlavní formulář

//navigation.main.movies1.go("")


/*
var messageJson = form.dataToPost.toJson()

// url bude http://httpbin.org/post
var response = form.apiobjects.httpBin.postAsync("post", messageJson)

if (response.isError()) then
	system.consoleError(response.getErrorMessage())
else 
	form.postResult = response.getJsonString()
	form.ContentType = response.getHeader("Content-Type")
endif

*/

//apiobjects.serverForMovies.postAsync("create", item)]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
</Form>